<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.dgut.epidemic.mapper.TemperatureItineraryMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.dgut.epidemic.pojo.TemperatureItinerary" >
    <id column="HEALTH_ID" property="healthId" jdbcType="INTEGER" />
    <result column="CAMPUS_ID" property="campusId" jdbcType="BIGINT" />
    <result column="PHYSICAL_CONDITION" property="physicalCondition" jdbcType="VARCHAR" />
    <result column="ITINERARY_RECORDS" property="itineraryRecords" jdbcType="VARCHAR" />
    <result column="RETURNED_TO_SCHOOL" property="returnedToSchool" jdbcType="VARCHAR" />
    <result column="CURRENT_ADDRESS" property="currentAddress" jdbcType="VARCHAR" />
    <result column="TEMPERATURE" property="temperature" jdbcType="DECIMAL" />
    <result column="UPLOAD_DATE" property="uploadDate" jdbcType="TIMESTAMP" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    HEALTH_ID, CAMPUS_ID, PHYSICAL_CONDITION, ITINERARY_RECORDS, RETURNED_TO_SCHOOL, 
    CURRENT_ADDRESS, TEMPERATURE, UPLOAD_DATE, REMARKS
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.dgut.epidemic.pojo.TemperatureItineraryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from temperature_itinerary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from temperature_itinerary
    where HEALTH_ID = #{healthId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from temperature_itinerary
    where HEALTH_ID = #{healthId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.dgut.epidemic.pojo.TemperatureItineraryExample" >
    delete from temperature_itinerary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.dgut.epidemic.pojo.TemperatureItinerary" >
    insert into temperature_itinerary (HEALTH_ID, CAMPUS_ID, PHYSICAL_CONDITION, 
      ITINERARY_RECORDS, RETURNED_TO_SCHOOL, CURRENT_ADDRESS, 
      TEMPERATURE, UPLOAD_DATE, REMARKS
      )
    values (#{healthId,jdbcType=INTEGER}, #{campusId,jdbcType=BIGINT}, #{physicalCondition,jdbcType=VARCHAR}, 
      #{itineraryRecords,jdbcType=VARCHAR}, #{returnedToSchool,jdbcType=VARCHAR}, #{currentAddress,jdbcType=VARCHAR}, 
      #{temperature,jdbcType=DECIMAL}, #{uploadDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.dgut.epidemic.pojo.TemperatureItinerary" >
    insert into temperature_itinerary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="healthId != null" >
        HEALTH_ID,
      </if>
      <if test="campusId != null" >
        CAMPUS_ID,
      </if>
      <if test="physicalCondition != null" >
        PHYSICAL_CONDITION,
      </if>
      <if test="itineraryRecords != null" >
        ITINERARY_RECORDS,
      </if>
      <if test="returnedToSchool != null" >
        RETURNED_TO_SCHOOL,
      </if>
      <if test="currentAddress != null" >
        CURRENT_ADDRESS,
      </if>
      <if test="temperature != null" >
        TEMPERATURE,
      </if>
      <if test="uploadDate != null" >
        UPLOAD_DATE,
      </if>
      <if test="remarks != null" >
        REMARKS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="healthId != null" >
        #{healthId,jdbcType=INTEGER},
      </if>
      <if test="campusId != null" >
        #{campusId,jdbcType=BIGINT},
      </if>
      <if test="physicalCondition != null" >
        #{physicalCondition,jdbcType=VARCHAR},
      </if>
      <if test="itineraryRecords != null" >
        #{itineraryRecords,jdbcType=VARCHAR},
      </if>
      <if test="returnedToSchool != null" >
        #{returnedToSchool,jdbcType=VARCHAR},
      </if>
      <if test="currentAddress != null" >
        #{currentAddress,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null" >
        #{temperature,jdbcType=DECIMAL},
      </if>
      <if test="uploadDate != null" >
        #{uploadDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.dgut.epidemic.pojo.TemperatureItineraryExample" resultType="java.lang.Integer" >
    select count(*) from temperature_itinerary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update temperature_itinerary
    <set >
      <if test="record.healthId != null" >
        HEALTH_ID = #{record.healthId,jdbcType=INTEGER},
      </if>
      <if test="record.campusId != null" >
        CAMPUS_ID = #{record.campusId,jdbcType=BIGINT},
      </if>
      <if test="record.physicalCondition != null" >
        PHYSICAL_CONDITION = #{record.physicalCondition,jdbcType=VARCHAR},
      </if>
      <if test="record.itineraryRecords != null" >
        ITINERARY_RECORDS = #{record.itineraryRecords,jdbcType=VARCHAR},
      </if>
      <if test="record.returnedToSchool != null" >
        RETURNED_TO_SCHOOL = #{record.returnedToSchool,jdbcType=VARCHAR},
      </if>
      <if test="record.currentAddress != null" >
        CURRENT_ADDRESS = #{record.currentAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.temperature != null" >
        TEMPERATURE = #{record.temperature,jdbcType=DECIMAL},
      </if>
      <if test="record.uploadDate != null" >
        UPLOAD_DATE = #{record.uploadDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        REMARKS = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update temperature_itinerary
    set HEALTH_ID = #{record.healthId,jdbcType=INTEGER},
      CAMPUS_ID = #{record.campusId,jdbcType=BIGINT},
      PHYSICAL_CONDITION = #{record.physicalCondition,jdbcType=VARCHAR},
      ITINERARY_RECORDS = #{record.itineraryRecords,jdbcType=VARCHAR},
      RETURNED_TO_SCHOOL = #{record.returnedToSchool,jdbcType=VARCHAR},
      CURRENT_ADDRESS = #{record.currentAddress,jdbcType=VARCHAR},
      TEMPERATURE = #{record.temperature,jdbcType=DECIMAL},
      UPLOAD_DATE = #{record.uploadDate,jdbcType=TIMESTAMP},
      REMARKS = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.dgut.epidemic.pojo.TemperatureItinerary" >
    update temperature_itinerary
    <set >
      <if test="campusId != null" >
        CAMPUS_ID = #{campusId,jdbcType=BIGINT},
      </if>
      <if test="physicalCondition != null" >
        PHYSICAL_CONDITION = #{physicalCondition,jdbcType=VARCHAR},
      </if>
      <if test="itineraryRecords != null" >
        ITINERARY_RECORDS = #{itineraryRecords,jdbcType=VARCHAR},
      </if>
      <if test="returnedToSchool != null" >
        RETURNED_TO_SCHOOL = #{returnedToSchool,jdbcType=VARCHAR},
      </if>
      <if test="currentAddress != null" >
        CURRENT_ADDRESS = #{currentAddress,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null" >
        TEMPERATURE = #{temperature,jdbcType=DECIMAL},
      </if>
      <if test="uploadDate != null" >
        UPLOAD_DATE = #{uploadDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where HEALTH_ID = #{healthId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.dgut.epidemic.pojo.TemperatureItinerary" >
    update temperature_itinerary
    set CAMPUS_ID = #{campusId,jdbcType=BIGINT},
      PHYSICAL_CONDITION = #{physicalCondition,jdbcType=VARCHAR},
      ITINERARY_RECORDS = #{itineraryRecords,jdbcType=VARCHAR},
      RETURNED_TO_SCHOOL = #{returnedToSchool,jdbcType=VARCHAR},
      CURRENT_ADDRESS = #{currentAddress,jdbcType=VARCHAR},
      TEMPERATURE = #{temperature,jdbcType=DECIMAL},
      UPLOAD_DATE = #{uploadDate,jdbcType=TIMESTAMP},
      REMARKS = #{remarks,jdbcType=VARCHAR}
    where HEALTH_ID = #{healthId,jdbcType=INTEGER}
  </update>
</mapper>