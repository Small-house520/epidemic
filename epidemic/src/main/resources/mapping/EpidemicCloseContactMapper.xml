<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.dgut.epidemic.mapper.EpidemicCloseContactMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.dgut.epidemic.pojo.EpidemicCloseContact" >
    <id column="CAMPUS_ID" property="campusId" jdbcType="BIGINT" />
    <result column="CONTACT_SOURCE" property="contactSource" jdbcType="VARCHAR" />
    <result column="ISOLATION_ADDRESS" property="isolationAddress" jdbcType="VARCHAR" />
    <result column="ISOLATION_TIME" property="isolationTime" jdbcType="TIMESTAMP" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CAMPUS_ID, CONTACT_SOURCE, ISOLATION_ADDRESS, ISOLATION_TIME, REMARKS
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.dgut.epidemic.pojo.EpidemicCloseContactExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from epidemic_close_contact
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from epidemic_close_contact
    where CAMPUS_ID = #{campusId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from epidemic_close_contact
    where CAMPUS_ID = #{campusId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.dgut.epidemic.pojo.EpidemicCloseContactExample" >
    delete from epidemic_close_contact
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.dgut.epidemic.pojo.EpidemicCloseContact" >
    insert into epidemic_close_contact (CAMPUS_ID, CONTACT_SOURCE, ISOLATION_ADDRESS, 
      ISOLATION_TIME, REMARKS)
    values (#{campusId,jdbcType=BIGINT}, #{contactSource,jdbcType=VARCHAR}, #{isolationAddress,jdbcType=VARCHAR}, 
      #{isolationTime,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.dgut.epidemic.pojo.EpidemicCloseContact" >
    insert into epidemic_close_contact
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="campusId != null" >
        CAMPUS_ID,
      </if>
      <if test="contactSource != null" >
        CONTACT_SOURCE,
      </if>
      <if test="isolationAddress != null" >
        ISOLATION_ADDRESS,
      </if>
      <if test="isolationTime != null" >
        ISOLATION_TIME,
      </if>
      <if test="remarks != null" >
        REMARKS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="campusId != null" >
        #{campusId,jdbcType=BIGINT},
      </if>
      <if test="contactSource != null" >
        #{contactSource,jdbcType=VARCHAR},
      </if>
      <if test="isolationAddress != null" >
        #{isolationAddress,jdbcType=VARCHAR},
      </if>
      <if test="isolationTime != null" >
        #{isolationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.dgut.epidemic.pojo.EpidemicCloseContactExample" resultType="java.lang.Integer" >
    select count(*) from epidemic_close_contact
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update epidemic_close_contact
    <set >
      <if test="record.campusId != null" >
        CAMPUS_ID = #{record.campusId,jdbcType=BIGINT},
      </if>
      <if test="record.contactSource != null" >
        CONTACT_SOURCE = #{record.contactSource,jdbcType=VARCHAR},
      </if>
      <if test="record.isolationAddress != null" >
        ISOLATION_ADDRESS = #{record.isolationAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.isolationTime != null" >
        ISOLATION_TIME = #{record.isolationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        REMARKS = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update epidemic_close_contact
    set CAMPUS_ID = #{record.campusId,jdbcType=BIGINT},
      CONTACT_SOURCE = #{record.contactSource,jdbcType=VARCHAR},
      ISOLATION_ADDRESS = #{record.isolationAddress,jdbcType=VARCHAR},
      ISOLATION_TIME = #{record.isolationTime,jdbcType=TIMESTAMP},
      REMARKS = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.dgut.epidemic.pojo.EpidemicCloseContact" >
    update epidemic_close_contact
    <set >
      <if test="contactSource != null" >
        CONTACT_SOURCE = #{contactSource,jdbcType=VARCHAR},
      </if>
      <if test="isolationAddress != null" >
        ISOLATION_ADDRESS = #{isolationAddress,jdbcType=VARCHAR},
      </if>
      <if test="isolationTime != null" >
        ISOLATION_TIME = #{isolationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where CAMPUS_ID = #{campusId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.dgut.epidemic.pojo.EpidemicCloseContact" >
    update epidemic_close_contact
    set CONTACT_SOURCE = #{contactSource,jdbcType=VARCHAR},
      ISOLATION_ADDRESS = #{isolationAddress,jdbcType=VARCHAR},
      ISOLATION_TIME = #{isolationTime,jdbcType=TIMESTAMP},
      REMARKS = #{remarks,jdbcType=VARCHAR}
    where CAMPUS_ID = #{campusId,jdbcType=BIGINT}
  </update>
</mapper>